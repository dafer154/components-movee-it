{"version":3,"sources":["components/Header/Header.js","components/Home/Home.js","components/SelectInput/SelectInput.js","components/Autocomplete/Autocomplete.js","components/Options/RadioButton.js","components/Button/Button.js","components/Button/WrapperButtons.js","components/InputText/InputText.js","components/InputText/WrapperInputText.js","components/InputNumber/InputNumber.js","components/InputNumber/WapperInputNumber.js","App.js","serviceWorker.js","index.js"],"names":["Header","state","className","to","Component","Home","SelectInput","size","value","Autocomplete","props","onChange","e","userInput","currentTarget","filteredSuggestions","suggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","onKeyDown","keyCode","suggestionsListComponent","this","length","map","index","key","type","placeholder","RadioButton","sendOption","event","label","selectedOption","target","changeOption","options","option","typeComponent","i","evt","name","checked","Button","callBackFunction","childData","styleButton","backgroundColor","valueLabel","width","color","border","convertColorBorder","styleChanged","optionSelect","properties","fontSize","style","padding","fontFamily","borderColor","borderRadius","fontWeight","letterSpacing","textTransform","colorByContext","mystyle","title","description","WrapperButtons","treeButton","button","InputText","styleInput","borderBottom","changeTypeInputText","boolValue","JSON","parse","disabled","font","background","borderLeft","borderRight","borderTop","outline","labelOption","component","WrapperInputText","treeTextButton","inputText","InputNumber","maxLength","message","slice","changeTypeInputNumber","step","precision","WrapperInputNumber","App","basename","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80a630cf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style/Header.css\";\r\n\r\nclass Header extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul className=\"nav\">\r\n                    <Link to=\"/button\"><li>Button</li></Link>\r\n                    <Link to=\"/autocomplete\"><li>Autocomplete</li></Link>\r\n                    <Link to=\"/input-number\"><li>Input Number</li></Link>\r\n                    <Link to=\"/input-text\"><li>Input Text</li></Link>\r\n                    <Link to=\"/select-input\"><li>Select Input</li></Link>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n    state = {}\r\n    render() {\r\n        return (<div>THIS IS THE HOME</div>);\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\n\r\nclass SelectInput extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>Select Input</div>\r\n                <select size={2}>\r\n                    <option value=\"volvo\">Volvo</option>\r\n                    <option value=\"saab\">Saab</option>\r\n                    <option value=\"mercedes\">Mercedes</option>\r\n                    <option value=\"audi\">Audi</option>\r\n                    <option value=\"david\">David</option>\r\n                    <option value=\"ana\">Ana</option>\r\n                    <option value=\"andres\">Andres</option>\r\n                </select>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectInput;","import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport './style/Autocomplete.css';\r\n\r\n\r\n\r\nclass Autocomplete extends Component {\r\n\r\n    // static propTypes = {\r\n    //     suggestions: PropTypes.instanceOf(Array)\r\n    // };\r\n\r\n    // static defaultProps = {\r\n    //     suggestions: []\r\n    // };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            suggestions: props.suggestions,\r\n            // The active selection's index\r\n            activeSuggestion: 0,\r\n            // The suggestions that match the user's input\r\n            filteredSuggestions: [],\r\n            // Whether or not the suggestion list is shown\r\n            showSuggestions: false,\r\n            // What the user has entered\r\n            userInput: \"\"\r\n        };\r\n    }\r\n\r\n    // Event fired when the input value is changed\r\n    onChange = e => {\r\n        // const { suggestions } = this.props;\r\n        const userInput = e.currentTarget.value;\r\n\r\n        // Filter our suggestions that don't contain the user's input\r\n        const filteredSuggestions = this.state.suggestions.filter(\r\n            suggestion =>\r\n                suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n        );\r\n\r\n        // Update the user input and filtered suggestions, reset the active\r\n        // suggestion and make sure the suggestions are shown\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions,\r\n            showSuggestions: true,\r\n            userInput: e.currentTarget.value\r\n        });\r\n    };\r\n\r\n    onClick = e => {\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions: [],\r\n            showSuggestions: false,\r\n            userInput: e.currentTarget.innerText\r\n        });\r\n    };\r\n\r\n    onKeyDown = e => {\r\n        const { activeSuggestion, filteredSuggestions } = this.state;\r\n        if (e.keyCode === 13) {\r\n            this.setState({\r\n                activeSuggestion: 0,\r\n                showSuggestions: false,\r\n                userInput: filteredSuggestions[activeSuggestion]\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            onChange,\r\n            onClick,\r\n            onKeyDown,\r\n            state: {\r\n                filteredSuggestions,\r\n                showSuggestions,\r\n                userInput\r\n            }\r\n        } = this;\r\n\r\n        let suggestionsListComponent;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n                suggestionsListComponent = (\r\n                    <ul className=\"suggestions\">\r\n                        {filteredSuggestions.map((suggestion, index) => {\r\n\r\n                            return (\r\n                                <li\r\n                                    key={suggestion}\r\n                                    onClick={onClick}\r\n                                >\r\n                                    {suggestion}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                );\r\n            } else {\r\n                suggestionsListComponent = (\r\n                    <div className=\"no-suggestions\">\r\n                        <em>No suggestions, you're on your own!</em>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"wrappAutocomplete\">\r\n                <div className=\"titleComponent\">Autocomplete</div>\r\n                <div className=\"container wrappAutocomplete\">\r\n                    <input className=\"autocompleteStyle\"\r\n                        type=\"text\"\r\n                        onChange={onChange}\r\n                        onKeyDown={onKeyDown}\r\n                        value={userInput}\r\n                        placeholder={\"Search Sport\"}\r\n                    />\r\n                    {suggestionsListComponent}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Autocomplete;","import React, { Component } from \"react\";\r\nimport './RadioButton.css';\r\n\r\nclass RadioButton extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedOption: props.options[0].option,\r\n            typeComponent: props.typeComponent\r\n        };\r\n    }\r\n\r\n    sendOption = (event, label) => {\r\n        this.setState({\r\n            selectedOption: event.target.value\r\n        })\r\n        this.props.changeOption(event.target.value, this.props.type, label);\r\n    }\r\n\r\n\r\n    optionSize(options) {\r\n        switch (options) {\r\n            case '50%':\r\n                return 'Normal'\r\n            case '30%':\r\n                return 'Small'\r\n            case '70%':\r\n                return 'Medium'\r\n            case '100%':\r\n                return 'Large'\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"titleRadio\">\r\n                    Options\r\n                </div>\r\n                <div className=\"wrapperRadio\">\r\n                    {this.state.typeComponent === 'button' ?\r\n\r\n                        this.props.options.map((option, i) => (\r\n                            <div key={i} className=\"radioStyle\">\r\n                                <div>\r\n                                    <input type=\"radio\" onChange={(evt) => this.sendOption(evt, option.name)} value={option.option} checked={this.state.selectedOption === option.option} />\r\n                                    {option.name}\r\n                                </div>\r\n                            </div>\r\n                        )) : this.state.typeComponent === 'inputText' ?\r\n                            this.props.options.map((option, i) => (\r\n                                <div key={i} className=\"radioStyle\">\r\n                                    <div>\r\n                                        <input type=\"radio\" onChange={(evt) => this.sendOption(evt, option.name)} value={option.option} checked={this.state.selectedOption === option.option} />\r\n                                        {option.name}\r\n                                    </div>\r\n                                </div>\r\n                            )) : this.state.typeComponent === 'inputNumber' ?\r\n                                this.props.options.map((option, i) => (\r\n                                    <div key={i} className=\"radioStyle\">\r\n                                        <div>\r\n                                            <input type=\"radio\" onChange={(evt) => this.sendOption(evt, option.name)} value={option.option} checked={this.state.selectedOption === option.option} />\r\n                                            {option.name}\r\n                                        </div>\r\n                                    </div>\r\n                                )) : ''\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RadioButton;\r\n","import React, { Component } from \"react\";\r\nimport RadioButtons from \"../Options/RadioButton\";\r\nimport \"./style/Button.css\";\r\n\r\nclass Button extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            properties: props,\r\n            styleButton: {\r\n                fontSize: props.style.fontSize,\r\n                color: props.style.color,\r\n                backgroundColor: props.style.backgroundColor,\r\n                padding: props.style.padding,\r\n                fontFamily: props.style.fontFamily,\r\n                width: props.style.width,\r\n                borderColor: props.style.borderColor,\r\n                borderRadius: props.style.borderRadius,\r\n                border: props.style.border,\r\n                fontWeight: props.style.fontWeight,\r\n                letterSpacing: props.style.letterSpacing,\r\n                textTransform: props.style.textTransform\r\n            },\r\n            valueLabel: props.valueLabel\r\n        };\r\n    }\r\n\r\n    convertColorBorder(color) {\r\n        const borderType = `3px solid`\r\n        const colorByContext = {\r\n            '#e3165b': `${borderType} rgb(227, 27, 91)`,\r\n            '#4d841d': `${borderType} rgb(77, 132, 29)`,\r\n            '#0378d5': `${borderType} rgb(3, 120, 213)`,\r\n            '#c15700': `${borderType} rgb(193, 87, 0)`,\r\n            '#d64113': `${borderType} rgb(214, 65, 19)`,\r\n            'default': `${borderType} rgb(227, 27, 91)`,\r\n        }\r\n        return !!colorByContext[color] ? colorByContext[color] : colorByContext['default']\r\n    }\r\n\r\n    callBackFunction = (childData, type, label) => {\r\n        switch (type) {\r\n            case 'color':\r\n                return this.setState({\r\n                    styleButton: { ...this.state.styleButton, backgroundColor: childData },\r\n                    valueLabel: label\r\n                })\r\n            case 'size':\r\n                return this.setState({\r\n                    styleButton: { ...this.state.styleButton, width: childData },\r\n                    valueLabel: label\r\n                });\r\n            case 'textButton':\r\n                return this.setState({\r\n                    styleButton: { ...this.state.styleButton, color: childData },\r\n                    valueLabel: label\r\n                });\r\n            case 'outlineButton':\r\n                return this.setState({\r\n                    styleButton: { ...this.state.styleButton, border: this.convertColorBorder(childData), color: childData },\r\n                    valueLabel: label\r\n                });\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            styleChanged: { optionSelect: childData, type: type }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const mystyle = {\r\n            fontSize: `${this.state.styleButton.fontSize}`,\r\n            color: `${this.state.styleButton.color}`,\r\n            backgroundColor: `${this.state.styleButton.backgroundColor}`,\r\n            border: `${this.state.styleButton.border}`,\r\n            padding: \"10px\",\r\n            fontFamily: `${this.state.styleButton.fontFamily}`,\r\n            width: `${this.state.styleButton.width}`,\r\n            borderColor: `${this.state.styleButton.borderColor}`,\r\n            borderRadius: `${this.state.styleButton.borderRadius}`,\r\n            fontWeight: `${this.state.styleButton.fontWeight}`,\r\n            letterSpacing: `${this.state.styleButton.letterSpacing}`,\r\n            textTransform: `${this.state.styleButton.textTransform}`,\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"title\">{this.state.properties.title}</div>\r\n                <div className=\"description\">{this.state.properties.description}</div>\r\n                <div className=\"wrappButton\">\r\n                    <button value=\"Hello\" style={mystyle}>{this.state.valueLabel}</button>\r\n                </div>\r\n                <RadioButtons\r\n                    key={this.state.properties.option}\r\n                    options={this.state.properties.options}\r\n                    type={this.state.properties.option}\r\n                    changeOption={this.callBackFunction}\r\n                    typeComponent={this.state.properties.typeComponent}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import React, { Component } from \"react\";\r\nimport Button from \"./Button\";\r\nimport './style/WrapperButton.css'\r\n\r\nclass WrapperButtons extends Component {\r\n\r\n    state = {\r\n        treeButton: [{\r\n            option: 'color',\r\n            typeComponent: 'button',\r\n            title: 'Button styles',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            valueLabel: 'Primary',\r\n            style: {\r\n                fontSize: '0.875rem',\r\n                backgroundColor: \"#e3165b\",\r\n                padding: '5px 15px',\r\n                fontFamily: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                width: \"12%\",\r\n                borderColor: 'transparent',\r\n                color: '#fff',\r\n                borderRadius: '4px',\r\n                fontWeight: 'bold',\r\n                letterSpacing: '0.02857em',\r\n                textTransform: 'uppercase'\r\n            },\r\n            options: [\r\n                {\r\n                    name: 'Primary',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Success',\r\n                    option: '#4d841d'\r\n                },\r\n                {\r\n                    name: 'Info',\r\n                    option: '#0378d5'\r\n                },\r\n                {\r\n                    name: 'Warning',\r\n                    option: '#c15700'\r\n                },\r\n                {\r\n                    name: 'Danger',\r\n                    option: '#d64113'\r\n                },\r\n            ]\r\n        },\r\n\r\n        {\r\n            option: 'textButton',\r\n            title: 'Text Button',\r\n            typeComponent: 'button',\r\n            description: 'loremIpsum',\r\n            valueLabel: 'Primary',\r\n            style: {\r\n                fontSize: '0.875rem',\r\n                backgroundColor: \"transparent\",\r\n                border: '0',\r\n                padding: '5px 15px',\r\n                fontFamily: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                width: \"12%\",\r\n                borderColor: 'transparent',\r\n                color: '#e3165b',\r\n                borderRadius: '4px',\r\n                fontWeight: 'bold',\r\n                letterSpacing: '0.02857em',\r\n                textTransform: 'uppercase'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Primary',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Success',\r\n                    option: '#4d841d'\r\n                },\r\n                {\r\n                    name: 'Info',\r\n                    option: '#0378d5'\r\n                },\r\n                {\r\n                    name: 'Warning',\r\n                    option: '#c15700'\r\n                },\r\n                {\r\n                    name: 'Danger',\r\n                    option: '#d64113'\r\n                },\r\n            ]\r\n        },\r\n\r\n        {\r\n            option: 'outlineButton',\r\n            title: 'Outline Button',\r\n            typeComponent: 'button',\r\n            description: 'loremIpsum',\r\n            valueLabel: 'Primary',\r\n            style: {\r\n                fontSize: '0.875rem',\r\n                backgroundColor: \"transparent\",\r\n                border: \"3px solid rgb(227, 22, 91)\",\r\n                padding: '5px 15px',\r\n                fontFamily: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                width: \"12%\",\r\n                color: '#e3165b',\r\n                borderRadius: '4px',\r\n                fontWeight: 'bold',\r\n                letterSpacing: '0.02857em',\r\n                textTransform: 'uppercase'\r\n            },\r\n            options: [\r\n                {\r\n                    name: 'Primary',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Success',\r\n                    option: '#4d841d'\r\n                },\r\n                {\r\n                    name: 'Info',\r\n                    option: '#0378d5'\r\n                },\r\n                {\r\n                    name: 'Warning',\r\n                    option: '#c15700'\r\n                },\r\n                {\r\n                    name: 'Danger',\r\n                    option: '#d64113'\r\n                },\r\n            ]\r\n        },\r\n\r\n        {\r\n            option: 'size',\r\n            title: 'Size Button',\r\n            typeComponent: 'button',\r\n            description: 'loremIpsum',\r\n            valueLabel: 'Normal',\r\n            style: {\r\n                fontSize: '0.875rem',\r\n                color: \"white\",\r\n                backgroundColor: \"DodgerBlue\",\r\n                borderColor: 'transparent',\r\n                padding: '5px 15px',\r\n                fontFamily: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                width: \"12%\",\r\n                borderRadius: '4px',\r\n                fontWeight: 'bold',\r\n                letterSpacing: '0.02857em',\r\n                textTransform: 'uppercase'\r\n            },\r\n            options: [\r\n                {\r\n                    name: 'Normal',\r\n                    option: '50%',\r\n                },\r\n                {\r\n                    name: 'Small',\r\n                    option: '30%',\r\n                },\r\n                {\r\n                    name: 'Medium',\r\n                    option: '70%',\r\n                },\r\n                {\r\n                    name: 'Large',\r\n                    option: '100%',\r\n                }\r\n            ]\r\n        }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"titleComponent\">Component Button</div>\r\n                {this.state.treeButton.map((button, i) => (\r\n                    <Button\r\n                        key={i}\r\n                        {...button}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WrapperButtons;","import React, { Component } from \"react\";\r\nimport RadioButtons from \"../Options/RadioButton\";\r\n\r\nclass InputText extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            properties: props,\r\n            styleInput: {\r\n                font: props.style.font,\r\n                color: props.style.color,\r\n                width: props.style.width,\r\n                padding: props.style.padding,\r\n                background: props.style.background,\r\n                borderLeft: props.style.borderLeft,\r\n                borderRight: props.style.borderRight,\r\n                borderTop: props.style.borderTop,\r\n                borderBottom: props.style.borderBottom,\r\n                outline: props.style.outline,\r\n                borderRadius: props.style.borderRadius\r\n            },\r\n            valueLabel: props.valueLabel,\r\n            disabled: props.disabled\r\n        };\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            valueLabel: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    convertColorBorder(color) {\r\n        const borderType = `1px solid`\r\n        const colorByContext = {\r\n            '#e3165b': `${borderType} rgb(227, 27, 91)`,\r\n            '#4d841d': `${borderType} rgb(77, 132, 29)`,\r\n            '#0378d5': `${borderType} rgb(3, 120, 213)`,\r\n            '#c15700': `${borderType} rgb(193, 87, 0)`,\r\n            '#d64113': `${borderType} rgb(214, 65, 19)`,\r\n            'default': `${borderType} rgb(227, 27, 91)`,\r\n        }\r\n        return !!colorByContext[color] ? colorByContext[color] : colorByContext['default']\r\n    }\r\n\r\n    callBackFunction = (childData, type, label) => {\r\n        switch (type) {\r\n            case 'color':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, borderBottom: this.convertColorBorder(childData), color: childData },\r\n                    valueLabel: label\r\n                })\r\n            case 'size':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, width: childData },\r\n                    valueLabel: label\r\n                });\r\n            case 'textButton':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, color: childData },\r\n                    valueLabel: label\r\n                });\r\n            case 'outlineButton':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, border: this.convertColorBorder(childData), color: childData },\r\n                    valueLabel: label\r\n                });\r\n            case 'types':\r\n                return this.changeTypeInputText(label);\r\n            case 'disabled':\r\n                const boolValue = JSON.parse(childData);\r\n                return this.setState({ disabled: boolValue });\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            styleChanged: { optionSelect: childData, type: type }\r\n        })\r\n    }\r\n\r\n    changeTypeInputText(labelOption) {\r\n        switch (labelOption) {\r\n            case 'Standard':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, borderBottom: '1px solid black', borderLeft: 'none', borderRight: 'none', borderTop: 'none', background: 'none', borderRadius: '0px' },\r\n                    valueLabel: labelOption\r\n                });\r\n            case 'Filled':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, borderBottom: '1px solid black', borderLeft: 'none', borderRight: 'none', borderTop: 'none', background: '#DFD3D3', borderRadius: '0px' },\r\n                    valueLabel: labelOption\r\n                });\r\n            case 'Outlined':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, borderBottom: '1px solid black', borderLeft: '1px solid black', borderRight: '1px solid black', borderTop: '1px solid black', background: 'none', borderRadius: '6px' },\r\n                    valueLabel: labelOption\r\n                });\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            onChange,\r\n        } = this;\r\n\r\n        const mystyle = {\r\n            font: `${this.state.styleInput.font}`,\r\n            color: `${this.state.styleInput.color}`,\r\n            width: `${this.state.styleInput.width}`,\r\n            padding: `${this.state.styleInput.padding}`,\r\n            background: `${this.state.styleInput.background}`,\r\n            borderLeft: `${this.state.styleInput.borderLeft}`,\r\n            borderRight: `${this.state.styleInput.borderRight}`,\r\n            borderTop: `${this.state.styleInput.borderTop}`,\r\n            borderBottom: `${this.state.styleInput.borderBottom}`,\r\n            outline: `${this.state.styleInput.outline}`,\r\n            borderRadius: `${this.state.styleInput.borderRadius}`,\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"title\">{this.state.properties.title}</div>\r\n                <div className=\"description\">{this.state.properties.description}</div>\r\n                <div className=\"wrappInputText\">\r\n                    <input disabled={this.state.disabled} style={mystyle} onChange={onChange} placeholder={this.state.valueLabel}></input>\r\n                </div>\r\n                <RadioButtons\r\n                    key={this.state.properties.option}\r\n                    options={this.state.properties.options}\r\n                    type={this.state.properties.option}\r\n                    changeOption={this.callBackFunction}\r\n                    typeComponent={this.state.properties.component}\r\n                />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputText;","import React, { Component } from \"react\";\r\nimport InputText from \"./InputText\";\r\n\r\nclass WrapperInputText extends Component {\r\n\r\n    state = {\r\n        treeTextButton: [{\r\n            option: 'types',\r\n            title: 'Input Text Types',\r\n            component: 'inputText',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '30%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Standard',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Filled',\r\n                    option: '#e8e8e8'\r\n                },\r\n                {\r\n                    name: 'Outlined',\r\n                    option: 'black'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            option: 'disabled',\r\n            title: 'Input Text Disabled',\r\n            component: 'inputText',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '30%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Available',\r\n                    option: false\r\n                },\r\n                {\r\n                    name: 'Disabled',\r\n                    option: true\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            option: 'color',\r\n            title: 'Input Text Color',\r\n            component: 'inputText',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '30%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Primary',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Success',\r\n                    option: '#4d841d'\r\n                },\r\n                {\r\n                    name: 'Info',\r\n                    option: '#0378d5'\r\n                },\r\n                {\r\n                    name: 'Warning',\r\n                    option: '#c15700'\r\n                },\r\n                {\r\n                    name: 'Danger',\r\n                    option: '#d64113'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            option: 'size',\r\n            title: 'Input Text Size',\r\n            component: 'inputText',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '30%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Normal',\r\n                    option: '50%',\r\n                },\r\n                {\r\n                    name: 'Small',\r\n                    option: '30%',\r\n                },\r\n                {\r\n                    name: 'Medium',\r\n                    option: '70%',\r\n                },\r\n                {\r\n                    name: 'Large',\r\n                    option: '100%',\r\n                }\r\n            ]\r\n        }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"titleComponent\">Component Input Text</div>\r\n                {this.state.treeTextButton.map((inputText, i) => (\r\n                    <InputText\r\n                        key={i}\r\n                        {...inputText}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default WrapperInputText;","import React, { Component } from \"react\";\r\nimport RadioButtons from \"../Options/RadioButton\";\r\nimport './style/InputNumber.css';\r\n\r\nclass InputNumber extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            properties: props,\r\n            styleInput: {\r\n                font: props.style.font,\r\n                color: props.style.color,\r\n                width: props.style.width,\r\n                padding: props.style.padding,\r\n                background: props.style.background,\r\n                borderLeft: props.style.borderLeft,\r\n                borderRight: props.style.borderRight,\r\n                borderTop: props.style.borderTop,\r\n                borderBottom: props.style.borderBottom,\r\n                outline: props.style.outline,\r\n                borderRadius: props.style.borderRadius\r\n            },\r\n            valueLabel: props.valueLabel,\r\n            disabled: props.disabled,\r\n            maxLength: props.maxLength,\r\n            step: props.step,\r\n            precision: props.precision\r\n        };\r\n    }\r\n\r\n    onChange = event => {\r\n\r\n        const { value, maxLength } = event.target;\r\n        const message = value.slice(0, maxLength);\r\n\r\n        this.setState({\r\n            valueLabel: message\r\n        });\r\n    }\r\n\r\n\r\n    convertColorBorder(color) {\r\n        const borderType = `1px solid`\r\n        const colorByContext = {\r\n            '#e3165b': `${borderType} rgb(227, 27, 91)`,\r\n            '#4d841d': `${borderType} rgb(77, 132, 29)`,\r\n            '#0378d5': `${borderType} rgb(3, 120, 213)`,\r\n            '#c15700': `${borderType} rgb(193, 87, 0)`,\r\n            '#d64113': `${borderType} rgb(214, 65, 19)`,\r\n            'default': `${borderType} rgb(227, 27, 91)`,\r\n        }\r\n        return !!colorByContext[color] ? colorByContext[color] : colorByContext['default']\r\n    }\r\n\r\n    callBackFunction = (childData, type, label) => {\r\n        switch (type) {\r\n            case 'color':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, borderBottom: this.convertColorBorder(childData), color: childData },\r\n                    valueLabel: label\r\n                })\r\n            case 'size':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, width: childData },\r\n                    valueLabel: label\r\n                });\r\n            case 'textButton':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, color: childData },\r\n                    valueLabel: label\r\n                });\r\n            case 'outlineButton':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, border: this.convertColorBorder(childData), color: childData },\r\n                    valueLabel: label\r\n                });\r\n            case 'types':\r\n                return this.changeTypeInputNumber(label);\r\n            case 'disabled':\r\n                const boolValue = JSON.parse(childData);\r\n                return this.setState({ disabled: boolValue });\r\n            case 'maxLength':\r\n                return this.setState({\r\n                    maxLength: childData,\r\n                    valueLabel: label\r\n                });\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            styleChanged: { optionSelect: childData, type: type }\r\n        })\r\n    }\r\n\r\n    changeTypeInputNumber(labelOption) {\r\n        switch (labelOption) {\r\n            case 'Standard':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, borderBottom: '1px solid black', borderLeft: 'none', borderRight: 'none', borderTop: 'none', background: 'none', borderRadius: '0px' },\r\n                    valueLabel: labelOption\r\n                });\r\n            case 'Filled':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, borderBottom: '1px solid black', borderLeft: 'none', borderRight: 'none', borderTop: 'none', background: '#DFD3D3', borderRadius: '0px' },\r\n                    valueLabel: labelOption\r\n                });\r\n            case 'Outlined':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, borderBottom: '1px solid black', borderLeft: '1px solid black', borderRight: '1px solid black', borderTop: '1px solid black', background: 'none', borderRadius: '6px' },\r\n                    valueLabel: labelOption\r\n                });\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            onChange,\r\n        } = this;\r\n\r\n        const mystyle = {\r\n            font: `${this.state.styleInput.font}`,\r\n            color: `${this.state.styleInput.color}`,\r\n            width: `${this.state.styleInput.width}`,\r\n            padding: `${this.state.styleInput.padding}`,\r\n            background: `${this.state.styleInput.background}`,\r\n            borderLeft: `${this.state.styleInput.borderLeft}`,\r\n            borderRight: `${this.state.styleInput.borderRight}`,\r\n            borderTop: `${this.state.styleInput.borderTop}`,\r\n            borderBottom: `${this.state.styleInput.borderBottom}`,\r\n            outline: `${this.state.styleInput.outline}`,\r\n            borderRadius: `${this.state.styleInput.borderRadius}`,\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"title\">{this.state.properties.title}</div>\r\n                <div className=\"description\">{this.state.properties.description}</div>\r\n                <div className=\"wrappInputNumber\">\r\n                    <input disabled={this.state.disabled} type=\"number\" style={mystyle} onChange={onChange} placeholder={this.state.valueLabel} step={this.state.step} precision={this.state.precision} value={this.state.valueLabel} maxLength={this.state.maxLength}></input>\r\n                </div>\r\n                {!!this.state.properties.options ? <RadioButtons\r\n                    key={this.state.properties.option}\r\n                    options={this.state.properties.options}\r\n                    type={this.state.properties.option}\r\n                    changeOption={this.callBackFunction}\r\n                    typeComponent={this.state.properties.component}\r\n                /> : ''}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputNumber;","import React, { Component } from \"react\";\r\nimport InputNumber from \"./InputNumber\";\r\n\r\nclass WrapperInputNumber extends Component {\r\n\r\n    state = {\r\n        treeTextButton: [{\r\n            option: 'types',\r\n            title: 'Input Number Types',\r\n            component: 'inputNumber',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            maxLength: '10',\r\n            step: '1',\r\n            precision: '1',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '30%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Standard',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Filled',\r\n                    option: '#DFD3D3'\r\n                },\r\n                {\r\n                    name: 'Outlined',\r\n                    option: 'black'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            option: 'disabled',\r\n            title: 'Input Number Disabled',\r\n            component: 'inputNumber',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            maxLength: '10',\r\n            step: '1',\r\n            precision: '1',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '30%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Available',\r\n                    option: false\r\n                },\r\n                {\r\n                    name: 'Disabled',\r\n                    option: true\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            option: 'color',\r\n            title: 'Input Number Color',\r\n            component: 'inputNumber',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            maxLength: '10',\r\n            step: '1',\r\n            precision: '1',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '30%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Primary',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Success',\r\n                    option: '#4d841d'\r\n                },\r\n                {\r\n                    name: 'Info',\r\n                    option: '#0378d5'\r\n                },\r\n                {\r\n                    name: 'Warning',\r\n                    option: '#c15700'\r\n                },\r\n                {\r\n                    name: 'Danger',\r\n                    option: '#d64113'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            option: 'size',\r\n            title: 'Input Number Size',\r\n            component: 'inputNumber',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            maxLength: '10',\r\n            step: '1',\r\n            precision: '1',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '30%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Normal',\r\n                    option: '50%',\r\n                },\r\n                {\r\n                    name: 'Small',\r\n                    option: '30%',\r\n                },\r\n                {\r\n                    name: 'Medium',\r\n                    option: '70%',\r\n                },\r\n                {\r\n                    name: 'Large',\r\n                    option: '100%',\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            option: 'maxLength',\r\n            title: 'Input Number MaxLength',\r\n            component: 'inputNumber',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            maxLength: '10',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '30%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Max length 10',\r\n                    option: '10',\r\n                },\r\n                {\r\n                    name: 'Max length 5',\r\n                    option: '5',\r\n                },\r\n                {\r\n                    name: 'Max length 2',\r\n                    option: '2',\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            option: 'float',\r\n            title: 'Input Number Float',\r\n            component: 'inputNumber',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            maxLength: '10',\r\n            step: '0.1',\r\n            precision: '2',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '30%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            }\r\n        }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"titleComponent\">Component Input Number</div>\r\n                {this.state.treeTextButton.map((inputText, i) => (\r\n                    <InputNumber\r\n                        key={i}\r\n                        {...inputText}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default WrapperInputNumber;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport SelectInput from \"./components/SelectInput/SelectInput\";\nimport Autocomplete from \"./components/Autocomplete/Autocomplete\";\nimport WrapperButtons from \"./components/Button/WrapperButtons\";\nimport WrapperInputText from \"./components/InputText/WrapperInputText\";\nimport WrapperInputNumber from \"./components/InputNumber/WapperInputNumber\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename='/'>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/button\" component={WrapperButtons} />\n          <Route path=\"/input-number\" component={WrapperInputNumber} />\n          <Route path=\"/input-text\" component={WrapperInputText} />\n          <Route path=\"/select-input\" component={SelectInput} />\n          <Route path=\"/autocomplete\" render={(props) => <Autocomplete {...props} suggestions={[\"Alligator\",\n            \"Bask\",\n            \"Crocodilian\",\n            \"Death Roll\",\n            \"Eggs\",\n            \"Jaws\",\n            \"Reptile\",\n            \"Solitary\",\n            \"Tail\",\n            \"Wetlands\"]} />} />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter >\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}