{"version":3,"sources":["components/Header/Header.js","components/Home/Home.js","components/SelectInput/SelectInput.js","components/SelectInput/WrapperSelect.js","components/Autocomplete/Autocomplete.js","components/Options/RadioButton.js","components/Utils.js","components/Button/Button.js","components/Button/WrapperButtons.js","components/CustomInput/CustomInput.js","components/InputText/WrapperInputText.js","components/InputNumber/WapperInputNumber.js","App.js","serviceWorker.js","index.js"],"names":["Header","state","className","to","Component","Home","SelectInput","props","properties","styleButton","fontSize","style","color","backgroundColor","padding","fontFamily","width","borderColor","borderRadius","border","fontWeight","letterSpacing","textTransform","valueLabel","optionsSelect","this","map","option","i","console","log","key","value","renderOptions","WrapperSelect","treeSelect","typeComponent","title","description","options","name","select","Autocomplete","onChange","e","userInput","currentTarget","filteredSuggestions","suggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","onKeyDown","keyCode","suggestionsListComponent","length","index","type","placeholder","RadioButton","sendOption","event","label","selectedOption","target","changeOption","evt","checked","convertColorBorder","colorByContext","Button","callBackFunction","childData","styleChanged","optionSelect","mystyle","WrapperButtons","treeButton","button","CustomInput","maxLength","message","slice","styleInput","borderBottom","changeTypeInputNumber","boolValue","JSON","parse","disabled","font","background","borderLeft","borderRight","borderTop","outline","step","precision","typeInput","labelOption","component","WrapperInputText","treeTextButton","inputText","WrapperInputNumber","App","basename","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc63e1d5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style/Header.css\";\r\n\r\nclass Header extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul className=\"nav\">\r\n                    <Link to=\"/button\"><li>Button</li></Link>\r\n                    <Link to=\"/autocomplete\"><li>Autocomplete</li></Link>\r\n                    <Link to=\"/input-number\"><li>Input Number</li></Link>\r\n                    <Link to=\"/input-text\"><li>Input Text</li></Link>\r\n                    <Link to=\"/select-input\"><li>Select Input</li></Link>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n    state = {}\r\n    render() {\r\n        return (<div>THIS IS THE HOME</div>);\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport './style/SelectInput.css';\r\n\r\nclass SelectInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            properties: props,\r\n            styleButton: {\r\n                fontSize: props.style.fontSize,\r\n                color: props.style.color,\r\n                backgroundColor: props.style.backgroundColor,\r\n                padding: props.style.padding,\r\n                fontFamily: props.style.fontFamily,\r\n                width: props.style.width,\r\n                borderColor: props.style.borderColor,\r\n                borderRadius: props.style.borderRadius,\r\n                border: props.style.border,\r\n                fontWeight: props.style.fontWeight,\r\n                letterSpacing: props.style.letterSpacing,\r\n                textTransform: props.style.textTransform\r\n            },\r\n            valueLabel: props.valueLabel,\r\n            optionsSelect: props.optionsSelect\r\n        };\r\n    }\r\n\r\n\r\n    renderOptions() {\r\n        this.state.optionsSelect.map((option, i) => {\r\n            console.log(\"Car\", option)\r\n            return <option key={i} value={option}>{option}</option>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>Select Input</div>\r\n                <select>\r\n                    {this.renderOptions}\r\n                </select>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectInput;","import React, { Component } from \"react\";\r\nimport SelectInput from \"./SelectInput\";\r\nimport './style/WrapperSelect.css'\r\n\r\nclass WrapperSelect extends Component {\r\n\r\n    state = {\r\n        treeSelect: [{\r\n            option: 'color',\r\n            typeComponent: 'select',\r\n            title: 'Button styles',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            valueLabel: 'Primary',\r\n            style: {\r\n                fontSize: '0.875rem',\r\n                backgroundColor: \"#e3165b\",\r\n                padding: '5px 15px',\r\n                fontFamily: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                width: \"12%\",\r\n                borderColor: 'transparent',\r\n                color: '#fff',\r\n                borderRadius: '4px',\r\n                fontWeight: 'bold',\r\n                letterSpacing: '0.02857em',\r\n                textTransform: 'uppercase'\r\n            },\r\n            optionsSelect: ['Bmw', 'Audi', 'Ferrari', 'Volskwagen', 'Mazda', 'Toyota', 'Nissan', 'Porshe'],\r\n            options: [\r\n                {\r\n                    name: 'Primary',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Success',\r\n                    option: '#4d841d'\r\n                },\r\n                {\r\n                    name: 'Info',\r\n                    option: '#0378d5'\r\n                },\r\n                {\r\n                    name: 'Warning',\r\n                    option: '#c15700'\r\n                },\r\n                {\r\n                    name: 'Danger',\r\n                    option: '#d64113'\r\n                },\r\n            ]\r\n        },\r\n\r\n        {\r\n            option: 'size',\r\n            title: 'Size Button',\r\n            typeComponent: 'button',\r\n            description: 'loremIpsum',\r\n            valueLabel: 'Normal',\r\n            style: {\r\n                fontSize: '0.875rem',\r\n                color: \"white\",\r\n                backgroundColor: \"DodgerBlue\",\r\n                borderColor: 'transparent',\r\n                padding: '5px 15px',\r\n                fontFamily: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                width: \"12%\",\r\n                borderRadius: '4px',\r\n                fontWeight: 'bold',\r\n                letterSpacing: '0.02857em',\r\n                textTransform: 'uppercase'\r\n            },\r\n            optionsSelect: ['Bmw', 'Audi', 'Ferrari', 'Volskwagen', 'Mazda', 'Toyota', 'Nissan', 'Porshe'],\r\n            options: [\r\n                {\r\n                    name: 'Normal',\r\n                    option: '50%',\r\n                },\r\n                {\r\n                    name: 'Small',\r\n                    option: '30%',\r\n                },\r\n                {\r\n                    name: 'Medium',\r\n                    option: '70%',\r\n                },\r\n                {\r\n                    name: 'Large',\r\n                    option: '100%',\r\n                }\r\n            ]\r\n        }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"titleComponent\">Component SelectInput</div>\r\n                {this.state.treeSelect.map((select, i) => (\r\n                    <SelectInput\r\n                        key={i}\r\n                        {...select}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WrapperSelect;","import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport './style/Autocomplete.css';\r\n\r\n\r\n\r\nclass Autocomplete extends Component {\r\n\r\n    // static propTypes = {\r\n    //     suggestions: PropTypes.instanceOf(Array)\r\n    // };\r\n\r\n    // static defaultProps = {\r\n    //     suggestions: []\r\n    // };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            suggestions: props.suggestions,\r\n            // The active selection's index\r\n            activeSuggestion: 0,\r\n            // The suggestions that match the user's input\r\n            filteredSuggestions: [],\r\n            // Whether or not the suggestion list is shown\r\n            showSuggestions: false,\r\n            // What the user has entered\r\n            userInput: \"\"\r\n        };\r\n    }\r\n\r\n    // Event fired when the input value is changed\r\n    onChange = e => {\r\n        // const { suggestions } = this.props;\r\n        const userInput = e.currentTarget.value;\r\n\r\n        // Filter our suggestions that don't contain the user's input\r\n        const filteredSuggestions = this.state.suggestions.filter(\r\n            suggestion =>\r\n                suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n        );\r\n\r\n        // Update the user input and filtered suggestions, reset the active\r\n        // suggestion and make sure the suggestions are shown\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions,\r\n            showSuggestions: true,\r\n            userInput: e.currentTarget.value\r\n        });\r\n    };\r\n\r\n    onClick = e => {\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions: [],\r\n            showSuggestions: false,\r\n            userInput: e.currentTarget.innerText\r\n        });\r\n    };\r\n\r\n    onKeyDown = e => {\r\n        const { activeSuggestion, filteredSuggestions } = this.state;\r\n        if (e.keyCode === 13) {\r\n            this.setState({\r\n                activeSuggestion: 0,\r\n                showSuggestions: false,\r\n                userInput: filteredSuggestions[activeSuggestion]\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            onChange,\r\n            onClick,\r\n            onKeyDown,\r\n            state: {\r\n                filteredSuggestions,\r\n                showSuggestions,\r\n                userInput\r\n            }\r\n        } = this;\r\n\r\n        let suggestionsListComponent;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n                suggestionsListComponent = (\r\n                    <ul className=\"suggestions\">\r\n                        {filteredSuggestions.map((suggestion, index) => {\r\n\r\n                            return (\r\n                                <li\r\n                                    key={suggestion}\r\n                                    onClick={onClick}\r\n                                >\r\n                                    {suggestion}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                );\r\n            } else {\r\n                suggestionsListComponent = (\r\n                    <div className=\"no-suggestions\">\r\n                        <em>No suggestions, you're on your own!</em>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"wrappAutocomplete\">\r\n                <div className=\"titleComponent\">Autocomplete</div>\r\n                <div className=\"container wrappAutocomplete\">\r\n                    <input className=\"autocompleteStyle\"\r\n                        type=\"text\"\r\n                        onChange={onChange}\r\n                        onKeyDown={onKeyDown}\r\n                        value={userInput}\r\n                        placeholder={\"Search Cars\"}\r\n                    />\r\n                    {suggestionsListComponent}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Autocomplete;","import React, { Component } from \"react\";\r\nimport './RadioButton.css';\r\n\r\nclass RadioButton extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedOption: props.options[0].option,\r\n            typeComponent: props.typeComponent\r\n        };\r\n    }\r\n\r\n    sendOption = (event, label) => {\r\n        this.setState({\r\n            selectedOption: event.target.value\r\n        })\r\n        this.props.changeOption(event.target.value, this.props.type, label);\r\n    }\r\n\r\n\r\n    optionSize(options) {\r\n        switch (options) {\r\n            case '50%':\r\n                return 'Normal'\r\n            case '30%':\r\n                return 'Small'\r\n            case '70%':\r\n                return 'Medium'\r\n            case '100%':\r\n                return 'Large'\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"titleRadio\">\r\n                    Options\r\n                </div>\r\n                <div className=\"wrapperRadio\">\r\n                    {this.state.typeComponent === 'button' ?\r\n\r\n                        this.props.options.map((option, i) => (\r\n                            <div key={i} className=\"radioStyle\">\r\n                                <div>\r\n                                    <input type=\"radio\" onChange={(evt) => this.sendOption(evt, option.name)} value={option.option} checked={this.state.selectedOption === option.option} />\r\n                                    {option.name}\r\n                                </div>\r\n                            </div>\r\n                        )) : this.state.typeComponent === 'inputText' ?\r\n                            this.props.options.map((option, i) => (\r\n                                <div key={i} className=\"radioStyle\">\r\n                                    <div>\r\n                                        <input type=\"radio\" onChange={(evt) => this.sendOption(evt, option.name)} value={option.option} checked={this.state.selectedOption === option.option} />\r\n                                        {option.name}\r\n                                    </div>\r\n                                </div>\r\n                            )) : this.state.typeComponent === 'inputNumber' ?\r\n                                this.props.options.map((option, i) => (\r\n                                    <div key={i} className=\"radioStyle\">\r\n                                        <div>\r\n                                            <input type=\"radio\" onChange={(evt) => this.sendOption(evt, option.name)} value={option.option} checked={this.state.selectedOption === option.option} />\r\n                                            {option.name}\r\n                                        </div>\r\n                                    </div>\r\n                                )) : ''\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RadioButton;\r\n","export const convertColorBorder = (color) => {\r\n    const borderType = `1px solid`\r\n    const colorByContext = {\r\n        '#e3165b': `${borderType} rgb(227, 27, 91)`,\r\n        '#4d841d': `${borderType} rgb(77, 132, 29)`,\r\n        '#0378d5': `${borderType} rgb(3, 120, 213)`,\r\n        '#c15700': `${borderType} rgb(193, 87, 0)`,\r\n        '#d64113': `${borderType} rgb(214, 65, 19)`,\r\n        'default': `${borderType} rgb(227, 27, 91)`,\r\n    }\r\n    return !!colorByContext[color] ? colorByContext[color] : colorByContext['default']\r\n} ","import React, { Component } from \"react\";\r\nimport RadioButtons from \"../Options/RadioButton\";\r\nimport \"./style/Button.css\";\r\nimport { convertColorBorder } from '../Utils';\r\n\r\nclass Button extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            properties: props,\r\n            styleButton: {\r\n                fontSize: props.style.fontSize,\r\n                color: props.style.color,\r\n                backgroundColor: props.style.backgroundColor,\r\n                padding: props.style.padding,\r\n                fontFamily: props.style.fontFamily,\r\n                width: props.style.width,\r\n                borderColor: props.style.borderColor,\r\n                borderRadius: props.style.borderRadius,\r\n                border: props.style.border,\r\n                fontWeight: props.style.fontWeight,\r\n                letterSpacing: props.style.letterSpacing,\r\n                textTransform: props.style.textTransform\r\n            },\r\n            valueLabel: props.valueLabel\r\n        };\r\n    }\r\n\r\n    callBackFunction = (childData, type, label) => {\r\n        switch (type) {\r\n            case 'color':\r\n                return this.setState({\r\n                    styleButton: { ...this.state.styleButton, backgroundColor: childData },\r\n                    valueLabel: label\r\n                })\r\n            case 'size':\r\n                return this.setState({\r\n                    styleButton: { ...this.state.styleButton, width: childData },\r\n                    valueLabel: label\r\n                });\r\n            case 'textButton':\r\n                return this.setState({\r\n                    styleButton: { ...this.state.styleButton, color: childData },\r\n                    valueLabel: label\r\n                });\r\n            case 'outlineButton':\r\n                return this.setState({\r\n                    styleButton: { ...this.state.styleButton, border: convertColorBorder(childData), color: childData },\r\n                    valueLabel: label\r\n                });\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            styleChanged: { optionSelect: childData, type: type }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const mystyle = {\r\n            fontSize: `${this.state.styleButton.fontSize}`,\r\n            color: `${this.state.styleButton.color}`,\r\n            backgroundColor: `${this.state.styleButton.backgroundColor}`,\r\n            border: `${this.state.styleButton.border}`,\r\n            padding: \"10px\",\r\n            fontFamily: `${this.state.styleButton.fontFamily}`,\r\n            width: `${this.state.styleButton.width}`,\r\n            borderColor: `${this.state.styleButton.borderColor}`,\r\n            borderRadius: `${this.state.styleButton.borderRadius}`,\r\n            fontWeight: `${this.state.styleButton.fontWeight}`,\r\n            letterSpacing: `${this.state.styleButton.letterSpacing}`,\r\n            textTransform: `${this.state.styleButton.textTransform}`,\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"title\">{this.state.properties.title}</div>\r\n                <div className=\"description\">{this.state.properties.description}</div>\r\n                <div className=\"wrappButton\">\r\n                    <button value=\"Hello\" style={mystyle}>{this.state.valueLabel}</button>\r\n                </div>\r\n                <RadioButtons\r\n                    key={this.state.properties.option}\r\n                    options={this.state.properties.options}\r\n                    type={this.state.properties.option}\r\n                    changeOption={this.callBackFunction}\r\n                    typeComponent={this.state.properties.typeComponent}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import React, { Component } from \"react\";\r\nimport Button from \"./Button\";\r\nimport './style/WrapperButton.css'\r\n\r\nclass WrapperButtons extends Component {\r\n\r\n    state = {\r\n        treeButton: [{\r\n            option: 'color',\r\n            typeComponent: 'button',\r\n            title: 'Button styles',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            valueLabel: 'Primary',\r\n            style: {\r\n                fontSize: '0.875rem',\r\n                backgroundColor: \"#e3165b\",\r\n                padding: '5px 15px',\r\n                fontFamily: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                width: \"25%\",\r\n                borderColor: 'transparent',\r\n                color: '#fff',\r\n                borderRadius: '4px',\r\n                fontWeight: 'bold',\r\n                letterSpacing: '0.02857em',\r\n                textTransform: 'uppercase'\r\n            },\r\n            options: [\r\n                {\r\n                    name: 'Primary',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Success',\r\n                    option: '#4d841d'\r\n                },\r\n                {\r\n                    name: 'Info',\r\n                    option: '#0378d5'\r\n                },\r\n                {\r\n                    name: 'Warning',\r\n                    option: '#c15700'\r\n                },\r\n                {\r\n                    name: 'Danger',\r\n                    option: '#d64113'\r\n                },\r\n            ]\r\n        },\r\n\r\n        {\r\n            option: 'textButton',\r\n            title: 'Text Button',\r\n            typeComponent: 'button',\r\n            description: 'loremIpsum',\r\n            valueLabel: 'Primary',\r\n            style: {\r\n                fontSize: '0.875rem',\r\n                backgroundColor: \"transparent\",\r\n                border: '0',\r\n                padding: '5px 15px',\r\n                fontFamily: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                width: \"25%\",\r\n                borderColor: 'transparent',\r\n                color: '#e3165b',\r\n                borderRadius: '4px',\r\n                fontWeight: 'bold',\r\n                letterSpacing: '0.02857em',\r\n                textTransform: 'uppercase'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Primary',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Success',\r\n                    option: '#4d841d'\r\n                },\r\n                {\r\n                    name: 'Info',\r\n                    option: '#0378d5'\r\n                },\r\n                {\r\n                    name: 'Warning',\r\n                    option: '#c15700'\r\n                },\r\n                {\r\n                    name: 'Danger',\r\n                    option: '#d64113'\r\n                },\r\n            ]\r\n        },\r\n\r\n        {\r\n            option: 'outlineButton',\r\n            title: 'Outline Button',\r\n            typeComponent: 'button',\r\n            description: 'loremIpsum',\r\n            valueLabel: 'Primary',\r\n            style: {\r\n                fontSize: '0.875rem',\r\n                backgroundColor: \"transparent\",\r\n                border: \"3px solid rgb(227, 22, 91)\",\r\n                padding: '5px 15px',\r\n                fontFamily: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                width: \"25%\",\r\n                color: '#e3165b',\r\n                borderRadius: '4px',\r\n                fontWeight: 'bold',\r\n                letterSpacing: '0.02857em',\r\n                textTransform: 'uppercase'\r\n            },\r\n            options: [\r\n                {\r\n                    name: 'Primary',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Success',\r\n                    option: '#4d841d'\r\n                },\r\n                {\r\n                    name: 'Info',\r\n                    option: '#0378d5'\r\n                },\r\n                {\r\n                    name: 'Warning',\r\n                    option: '#c15700'\r\n                },\r\n                {\r\n                    name: 'Danger',\r\n                    option: '#d64113'\r\n                },\r\n            ]\r\n        },\r\n\r\n        {\r\n            option: 'size',\r\n            title: 'Size Button',\r\n            typeComponent: 'button',\r\n            description: 'loremIpsum',\r\n            valueLabel: 'Normal',\r\n            style: {\r\n                fontSize: '0.875rem',\r\n                color: \"white\",\r\n                backgroundColor: \"DodgerBlue\",\r\n                borderColor: 'transparent',\r\n                padding: '5px 15px',\r\n                fontFamily: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                width: \"25%\",\r\n                borderRadius: '4px',\r\n                fontWeight: 'bold',\r\n                letterSpacing: '0.02857em',\r\n                textTransform: 'uppercase'\r\n            },\r\n            options: [\r\n                {\r\n                    name: 'Normal',\r\n                    option: '25%',\r\n                },\r\n                {\r\n                    name: 'Small',\r\n                    option: '12%',\r\n                },\r\n                {\r\n                    name: 'Medium',\r\n                    option: '75%',\r\n                },\r\n                {\r\n                    name: 'Large',\r\n                    option: '100%',\r\n                }\r\n            ]\r\n        }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"titleComponent\">Component Button</div>\r\n                {this.state.treeButton.map((button, i) => (\r\n                    <Button\r\n                        key={i}\r\n                        {...button}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WrapperButtons;","import React, { Component } from \"react\";\r\nimport RadioButtons from \"../Options/RadioButton\";\r\nimport './style/CustomInput.css';\r\nimport { convertColorBorder } from '../Utils';\r\n\r\nclass CustomInput extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            properties: props,\r\n            styleInput: {\r\n                font: props.style.font,\r\n                color: props.style.color,\r\n                width: props.style.width,\r\n                padding: props.style.padding,\r\n                background: props.style.background,\r\n                borderLeft: props.style.borderLeft,\r\n                borderRight: props.style.borderRight,\r\n                borderTop: props.style.borderTop,\r\n                borderBottom: props.style.borderBottom,\r\n                outline: props.style.outline,\r\n                borderRadius: props.style.borderRadius\r\n            },\r\n            valueLabel: props.valueLabel,\r\n            disabled: props.disabled,\r\n            maxLength: props.maxLength,\r\n            step: props.step,\r\n            precision: props.precision,\r\n            typeInput: props.typeInput\r\n        };\r\n    }\r\n\r\n    onChange = event => {\r\n        const { value, maxLength } = event.target;\r\n        const message = value.slice(0, maxLength);\r\n        this.setState({\r\n            valueLabel: message\r\n        });\r\n    }\r\n\r\n    callBackFunction = (childData, type, label) => {\r\n        switch (type) {\r\n            case 'color':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, borderBottom: convertColorBorder(childData), color: childData },\r\n                    valueLabel: label\r\n                })\r\n            case 'size':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, width: childData },\r\n                    valueLabel: label\r\n                });\r\n            case 'textButton':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, color: childData },\r\n                    valueLabel: label\r\n                });\r\n            case 'outlineButton':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, border: this.convertColorBorder(childData), color: childData },\r\n                    valueLabel: label\r\n                });\r\n            case 'types':\r\n                return this.changeTypeInputNumber(label);\r\n            case 'disabled':\r\n                const boolValue = JSON.parse(childData);\r\n                return this.setState({ disabled: boolValue });\r\n            case 'maxLength':\r\n                return this.setState({\r\n                    maxLength: childData,\r\n                    valueLabel: label\r\n                });\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            styleChanged: { optionSelect: childData, type: type }\r\n        })\r\n    }\r\n\r\n    changeTypeInputNumber(labelOption) {\r\n        switch (labelOption) {\r\n            case 'Standard':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, borderBottom: '1px solid black', borderLeft: 'none', borderRight: 'none', borderTop: 'none', background: 'none', borderRadius: '0px' },\r\n                    valueLabel: labelOption\r\n                });\r\n            case 'Filled':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, borderBottom: '1px solid black', borderLeft: 'none', borderRight: 'none', borderTop: 'none', background: '#DFD3D3', borderRadius: '0px' },\r\n                    valueLabel: labelOption\r\n                });\r\n            case 'Outlined':\r\n                return this.setState({\r\n                    styleInput: { ...this.state.styleInput, borderBottom: '1px solid black', borderLeft: '1px solid black', borderRight: '1px solid black', borderTop: '1px solid black', background: 'none', borderRadius: '6px' },\r\n                    valueLabel: labelOption\r\n                });\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            onChange,\r\n            callBackFunction\r\n        } = this;\r\n\r\n        const mystyle = {\r\n            font: `${this.state.styleInput.font}`,\r\n            color: `${this.state.styleInput.color}`,\r\n            width: `${this.state.styleInput.width}`,\r\n            padding: `${this.state.styleInput.padding}`,\r\n            background: `${this.state.styleInput.background}`,\r\n            borderLeft: `${this.state.styleInput.borderLeft}`,\r\n            borderRight: `${this.state.styleInput.borderRight}`,\r\n            borderTop: `${this.state.styleInput.borderTop}`,\r\n            borderBottom: `${this.state.styleInput.borderBottom}`,\r\n            outline: `${this.state.styleInput.outline}`,\r\n            borderRadius: `${this.state.styleInput.borderRadius}`,\r\n        }\r\n        const { title, description, options, option, component } = this.state.properties\r\n        const { disabled, valueLabel, step, precision, maxLength, typeInput } = this.state\r\n        return (\r\n\r\n            <div>\r\n                {this.state.typeInput === 'number' ?\r\n                    <div className=\"container\">\r\n                        <div className=\"title\">{title}</div>\r\n                        <div className=\"description\">{description}</div>\r\n                        <div className=\"wrappInputNumber\">\r\n                            <input disabled={disabled} type={typeInput} style={mystyle} onChange={onChange} placeholder={valueLabel} step={step} precision={precision} value={valueLabel} maxLength={maxLength}></input>\r\n                        </div>\r\n                        {!!options ? <RadioButtons\r\n                            key={option}\r\n                            options={options}\r\n                            type={option}\r\n                            changeOption={callBackFunction}\r\n                            typeComponent={component}\r\n                        /> : ''}\r\n\r\n                    </div> :\r\n                    <div className=\"container\">\r\n                        <div className=\"title\">{title}</div>\r\n                        <div className=\"description\">{description}</div>\r\n                        <div className=\"wrappInputText\">\r\n                            <input disabled={disabled} type={typeInput} style={mystyle} onChange={onChange} placeholder={valueLabel}></input>\r\n                        </div>\r\n                        <RadioButtons\r\n                            key={option}\r\n                            options={options}\r\n                            type={option}\r\n                            changeOption={callBackFunction}\r\n                            typeComponent={component}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomInput;","import React, { Component } from \"react\";\r\nimport CustomInput from \"../CustomInput/CustomInput\";\r\n\r\nclass WrapperInputText extends Component {\r\n\r\n    state = {\r\n        treeTextButton: [{\r\n            option: 'types',\r\n            title: 'Input Text Types',\r\n            component: 'inputText',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '25%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Standard',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Filled',\r\n                    option: '#e8e8e8'\r\n                },\r\n                {\r\n                    name: 'Outlined',\r\n                    option: 'black'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            option: 'disabled',\r\n            title: 'Input Text Disabled',\r\n            component: 'inputText',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '25%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Available',\r\n                    option: false\r\n                },\r\n                {\r\n                    name: 'Disabled',\r\n                    option: true\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            option: 'color',\r\n            title: 'Input Text Color',\r\n            component: 'inputText',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '25%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Primary',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Success',\r\n                    option: '#4d841d'\r\n                },\r\n                {\r\n                    name: 'Info',\r\n                    option: '#0378d5'\r\n                },\r\n                {\r\n                    name: 'Warning',\r\n                    option: '#c15700'\r\n                },\r\n                {\r\n                    name: 'Danger',\r\n                    option: '#d64113'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            option: 'size',\r\n            title: 'Input Text Size',\r\n            component: 'inputText',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '25%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Normal',\r\n                    option: '25%',\r\n                },\r\n                {\r\n                    name: 'Small',\r\n                    option: '12%',\r\n                },\r\n                {\r\n                    name: 'Medium',\r\n                    option: '75%',\r\n                },\r\n                {\r\n                    name: 'Large',\r\n                    option: '100%',\r\n                }\r\n            ]\r\n        }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"titleComponent\">Component Input Text</div>\r\n                {this.state.treeTextButton.map((inputText, i) => (\r\n                    <CustomInput\r\n                        key={i}\r\n                        {...inputText}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default WrapperInputText;","import React, { Component } from \"react\";\r\nimport CustomInput from \"../CustomInput/CustomInput\";\r\n\r\nclass WrapperInputNumber extends Component {\r\n\r\n    state = {\r\n        treeTextButton: [{\r\n            option: 'types',\r\n            title: 'Input Number Types',\r\n            component: 'inputNumber',\r\n            typeInput: 'number',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            maxLength: '10',\r\n            step: '1',\r\n            precision: '1',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '25%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Standard',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Filled',\r\n                    option: '#DFD3D3'\r\n                },\r\n                {\r\n                    name: 'Outlined',\r\n                    option: 'black'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            option: 'disabled',\r\n            title: 'Input Number Disabled',\r\n            component: 'inputNumber',\r\n            typeInput: 'number',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            maxLength: '10',\r\n            step: '1',\r\n            precision: '1',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '25%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Available',\r\n                    option: false\r\n                },\r\n                {\r\n                    name: 'Disabled',\r\n                    option: true\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            option: 'color',\r\n            title: 'Input Number Color',\r\n            component: 'inputNumber',\r\n            typeInput: 'number',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            maxLength: '10',\r\n            step: '1',\r\n            precision: '1',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '25%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Primary',\r\n                    option: '#e3165b'\r\n                },\r\n                {\r\n                    name: 'Success',\r\n                    option: '#4d841d'\r\n                },\r\n                {\r\n                    name: 'Info',\r\n                    option: '#0378d5'\r\n                },\r\n                {\r\n                    name: 'Warning',\r\n                    option: '#c15700'\r\n                },\r\n                {\r\n                    name: 'Danger',\r\n                    option: '#d64113'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            option: 'size',\r\n            title: 'Input Number Size',\r\n            component: 'inputNumber',\r\n            typeInput: 'number',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            maxLength: '10',\r\n            step: '1',\r\n            precision: '1',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '25%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Normal',\r\n                    option: '25%',\r\n                },\r\n                {\r\n                    name: 'Small',\r\n                    option: '12%',\r\n                },\r\n                {\r\n                    name: 'Medium',\r\n                    option: '75%',\r\n                },\r\n                {\r\n                    name: 'Large',\r\n                    option: '100%',\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            option: 'maxLength',\r\n            title: 'Input Number MaxLength',\r\n            component: 'inputNumber',\r\n            typeInput: 'number',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            maxLength: '10',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '25%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            },\r\n\r\n            options: [\r\n                {\r\n                    name: 'Max length 10',\r\n                    option: '10',\r\n                },\r\n                {\r\n                    name: 'Max length 5',\r\n                    option: '5',\r\n                },\r\n                {\r\n                    name: 'Max length 2',\r\n                    option: '2',\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            option: 'float',\r\n            title: 'Input Number Float',\r\n            component: 'inputNumber',\r\n            typeInput: 'number',\r\n            description: 'Contained buttons are high-emphasis, distinguished by their use of elevation and fill. They contain actions that are primary to your app.',\r\n            placeholder: 'Standard',\r\n            valueLabel: 'Standard',\r\n            maxLength: '10',\r\n            step: '0.1',\r\n            precision: '2',\r\n            disabled: false,\r\n            style: {\r\n                font: 'font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                color: 'none',\r\n                width: '25%',\r\n                padding: '6px 11px 7px',\r\n                background: 'none',\r\n                outline: 'none',\r\n                borderBottom: '1px solid black',\r\n                borderLeft: 'none',\r\n                borderRight: 'none',\r\n                borderTop: 'none',\r\n                borderRadius: '0px'\r\n            }\r\n        }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"titleComponent\">Component Input Number</div>\r\n                {this.state.treeTextButton.map((inputText, i) => (\r\n                    <CustomInput\r\n                        key={i}\r\n                        {...inputText}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default WrapperInputNumber;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport WrapperSelect from \"./components/SelectInput/WrapperSelect\";\nimport Autocomplete from \"./components/Autocomplete/Autocomplete\";\nimport WrapperButtons from \"./components/Button/WrapperButtons\";\nimport WrapperInputText from \"./components/InputText/WrapperInputText\";\nimport WrapperInputNumber from \"./components/InputNumber/WapperInputNumber\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename='/'>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/button\" component={WrapperButtons} />\n          <Route path=\"/input-number\" component={WrapperInputNumber} />\n          <Route path=\"/input-text\" component={WrapperInputText} />\n          <Route path=\"/select-input\" component={WrapperSelect} />\n          <Route path=\"/autocomplete\" render={(props) => <Autocomplete {...props} suggestions={[\"Audi\",\n            \"Mazda\",\n            \"Nissan\",\n            \"Ferrari\",\n            \"Volvo\",\n            \"Toyota\",\n            \"Hyundai\",\n            \"Chevrolet\",\n            \"Renault\",\n            \"Honda\",\n            \"Volskwagen\",\n            \"Kia\",\n            \"Peugeot\",\n            \"Land Rover\",\n            \"Suzuki\",\n            \"Bmw\",\n            \"Porsche\",\n          ]} />} />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter >\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}